android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> c
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void setArguments(android.os.Bundle) -> b
    android.os.Bundle getArguments() -> b
    android.support.v4.app.FragmentActivity getActivity() -> c
    android.content.res.Resources getResources() -> d
    java.lang.String getString(int) -> a
    boolean isAdded() -> e
    boolean isDetached() -> f
    boolean isHidden() -> g
    void onHiddenChanged(boolean) -> a
    void setMenuVisibility(boolean) -> b
    void setUserVisibleHint(boolean) -> c
    android.support.v4.app.LoaderManager getLoaderManager() -> h
    void startActivity(android.content.Intent) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> c
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> d
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    android.view.View getView() -> i
    void onActivityCreated(android.os.Bundle) -> e
    void onViewStateRestored(android.os.Bundle) -> f
    void onStart() -> j
    void onResume() -> k
    void onSaveInstanceState(android.os.Bundle) -> g
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> l
    void onStop() -> m
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> n
    void onDestroy() -> o
    void initState() -> p
    void onDetach() -> q
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> r
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> s
    void performCreate(android.os.Bundle) -> h
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> i
    void performStart() -> t
    void performResume() -> u
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> v
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> j
    void performPause() -> w
    void performStop() -> x
    void performReallyStop() -> y
    void performDestroyView() -> z
    void performDestroy() -> A
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> f
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.i:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.j:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.k:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.l:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.m:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.n:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.o:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.p:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.r:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.s:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.t:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    android.support.v4.app.Fragment mCurrentPrimaryItem -> c
    android.support.v4.app.Fragment getItem(int) -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    long getItemId(int) -> b
    java.lang.String makeFragmentName(int,long) -> a
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.u:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.v:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.w:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.x:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.y:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.ListFragment -> android.support.v4.app.z:
    android.os.Handler mHandler -> X
    java.lang.Runnable mRequestFocus -> Y
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> Z
    android.widget.ListAdapter mAdapter -> P
    android.widget.ListView mList -> Q
    android.view.View mEmptyView -> R
    android.widget.TextView mStandardEmptyView -> S
    android.view.View mProgressContainer -> T
    android.view.View mListContainer -> U
    java.lang.CharSequence mEmptyText -> V
    boolean mListShown -> W
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onDestroyView() -> n
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> a
    void setListAdapter(android.widget.ListAdapter) -> a
    void setListShown(boolean,boolean) -> a
    void ensureList() -> B
android.support.v4.app.ListFragment$1 -> android.support.v4.app.aa:
    android.support.v4.app.ListFragment this$0 -> a
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ab:
    android.support.v4.app.ListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.ac:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    void destroyLoader(int) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.ad:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.ae:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    boolean mCreatingLoader -> h
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> c
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> d
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> a
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    void destroyLoader(int) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.af:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> b
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ag:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ah:
android.support.v4.content.AsyncTaskLoader -> android.support.v4.a.a:
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> a
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> b
    long mUpdateThrottle -> c
    long mLastLoadCompleteTime -> d
    android.os.Handler mHandler -> e
    void setUpdateThrottle(long) -> a
    void onForceLoad() -> a
    boolean cancelLoad() -> b
    void onCanceled(java.lang.Object) -> a
    void executePendingTask() -> c
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> a
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> b
    java.lang.Object loadInBackground() -> d
    java.lang.Object onLoadInBackground() -> e
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.a.b:
    java.lang.Object result -> a
    boolean waiting -> b
    java.util.concurrent.CountDownLatch done -> e
    android.support.v4.content.AsyncTaskLoader this$0 -> c
    java.lang.Object doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> a
    void onCancelled() -> a
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> a
android.support.v4.content.CursorLoader -> android.support.v4.a.c:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> f
    android.net.Uri mUri -> g
    java.lang.String[] mProjection -> h
    java.lang.String mSelection -> i
    java.lang.String[] mSelectionArgs -> j
    java.lang.String mSortOrder -> k
    android.database.Cursor mCursor -> l
    android.database.Cursor loadInBackground() -> f
    void registerContentObserver(android.database.Cursor,android.database.ContentObserver) -> a
    void deliverResult(android.database.Cursor) -> a
    void onStartLoading() -> g
    void onStopLoading() -> h
    void onCanceled(android.database.Cursor) -> b
    void onReset() -> i
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    java.lang.Object loadInBackground() -> d
    void onCanceled(java.lang.Object) -> a
    void deliverResult(java.lang.Object) -> b
android.support.v4.content.Loader -> android.support.v4.a.d:
    int mId -> m
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> n
    android.content.Context mContext -> o
    boolean mStarted -> p
    boolean mAbandoned -> q
    boolean mReset -> r
    boolean mContentChanged -> s
    void deliverResult(java.lang.Object) -> b
    android.content.Context getContext() -> j
    int getId() -> k
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    boolean isStarted() -> l
    boolean isAbandoned() -> m
    boolean isReset() -> n
    void startLoading() -> o
    void onStartLoading() -> g
    void forceLoad() -> p
    void onForceLoad() -> a
    void stopLoading() -> q
    void onStopLoading() -> h
    void abandon() -> r
    void onAbandon() -> s
    void reset() -> t
    void onReset() -> i
    boolean takeContentChanged() -> u
    void onContentChanged() -> v
    java.lang.String dataToString(java.lang.Object) -> c
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.a.e:
    android.support.v4.content.Loader this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.f:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
android.support.v4.content.ModernAsyncTask -> android.support.v4.a.g:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> b
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> d
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> c
    java.util.concurrent.Executor sDefaultExecutor -> e
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> f
    java.util.concurrent.FutureTask mFuture -> g
    android.support.v4.content.ModernAsyncTask$Status mStatus -> h
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> i
    void postResultIfNotInvoked(java.lang.Object) -> c
    java.lang.Object postResult(java.lang.Object) -> d
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    void onPreExecute() -> b
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate(java.lang.Object[]) -> b
    void onCancelled(java.lang.Object) -> b
    void onCancelled() -> a
    boolean isCancelled() -> c
    boolean cancel(boolean) -> a
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void finish(java.lang.Object) -> e
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> a
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> a
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> b
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> c
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.a.h:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.a.i:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.a.j:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.a.k:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> a
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.a.l:
    android.support.v4.content.ModernAsyncTask mTask -> a
    java.lang.Object[] mData -> b
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.a.m:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.a.n:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> a
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> b
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> c
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> d
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.a.o:
    java.lang.Object[] mParams -> b
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    java.lang.Object get(int) -> a
    java.lang.Object get(int,java.lang.Object) -> a
    void delete(int) -> b
    void remove(int) -> c
    void removeAt(int) -> d
    void gc() -> c
    void put(int,java.lang.Object) -> b
    int size() -> a
    int keyAt(int) -> e
    java.lang.Object valueAt(int) -> f
    int indexOfKey(int) -> g
    void clear() -> b
    int binarySearch(int[],int,int,int) -> a
    int idealByteArraySize(int) -> h
    int idealIntArraySize(int) -> i
android.support.v4.util.TimeUtils -> android.support.v4.c.d:
    java.lang.Object sFormatSync -> a
    char[] sFormatStr -> b
    int accumField(int,int,boolean,int) -> a
    int printField(char[],int,char,int,boolean,int) -> a
    int formatDurationLocked(long,int) -> a
    void formatDuration(long,java.io.PrintWriter,int) -> a
    void formatDuration(long,java.io.PrintWriter) -> a
    void formatDuration(long,long,java.io.PrintWriter) -> a
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.n:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.o:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.p:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.q:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.r:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.s:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.t:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.u:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.v:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.w:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.x:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> b
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    java.lang.CharSequence getPageTitle(int) -> c
    float getPageWidth(int) -> d
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.y:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.z:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.aa:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ab:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.ac:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.ad:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ae:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.af:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ag:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ah:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ai:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.aj:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ak:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.al:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.am:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.an:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ao:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ap:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.aq:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ar:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.as:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.at:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mLastMotionX -> E
    float mLastMotionY -> F
    float mInitialMotionX -> G
    float mInitialMotionY -> H
    int mActivePointerId -> I
    android.view.VelocityTracker mVelocityTracker -> J
    int mMinimumVelocity -> K
    int mMaximumVelocity -> L
    int mFlingDistance -> M
    int mCloseEnough -> N
    boolean mFakeDragging -> O
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> P
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> Q
    boolean mFirstLayout -> R
    boolean mNeedCalculatePageOffsets -> S
    boolean mCalledSuper -> T
    int mDecorChildCount -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> W
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> Z
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> aa
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ab
    int mDrawingOrder -> ac
    java.util.ArrayList mDrawingOrderedChildren -> ad
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ae
    java.lang.Runnable mEndScrollRunnable -> af
    int mScrollState -> ag
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> g
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> d
    boolean pageRight() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> f
android.support.v4.view.ViewPager$1 -> android.support.v4.view.au:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.av:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.aw:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ax:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ay:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.az:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ba:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.bb:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bc:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bd:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.be:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bf:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.bg:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.bh:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    java.lang.Object getInfo() -> a
    void addAction(int) -> a
    void setScrollable(boolean) -> a
    void setClassName(java.lang.CharSequence) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    void addAction(java.lang.Object,int) -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.e:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.f:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.g:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.h:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.i:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.j:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.k:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.l:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.m:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.n:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.e:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
net.fred.feedex.Constants -> net.fred.feedex.a:
    java.text.DateFormat DATE_FORMAT -> a
    java.text.DateFormat TIME_FORMAT -> b
net.fred.feedex.MainApplication -> net.fred.feedex.MainApplication:
    android.content.Context _context -> a
    void onCreate() -> onCreate
    android.content.Context getAppContext() -> a
net.fred.feedex.PrefsManager -> net.fred.feedex.b:
    boolean getBoolean(java.lang.String,boolean) -> a
    void putBoolean(java.lang.String,boolean) -> b
    int getInteger(java.lang.String,int) -> a
    void putInteger(java.lang.String,int) -> b
    long getLong(java.lang.String,long) -> a
    void putLong(java.lang.String,long) -> b
    java.lang.String getString(java.lang.String,java.lang.String) -> a
    void putString(java.lang.String,java.lang.String) -> b
net.fred.feedex.ThrottledContentObserver -> net.fred.feedex.c:
    long mUpdateThrottle -> a
    android.os.Handler mHandler -> b
    java.lang.Runnable mOnChangeTask -> c
    void onChange(boolean) -> onChange
    void onChangeThrottled(boolean) -> a
    void access$0(net.fred.feedex.ThrottledContentObserver,java.lang.Runnable) -> a
net.fred.feedex.ThrottledContentObserver$1 -> net.fred.feedex.d:
    net.fred.feedex.ThrottledContentObserver this$0 -> a
    boolean val$selfChange -> b
    void run() -> run
net.fred.feedex.activity.EditFeedActivity -> net.fred.feedex.activity.EditFeedActivity:
    java.lang.String[] FEED_PROJECTION -> a
    android.widget.EditText mNameEditText -> b
    android.widget.EditText mUrlEditText -> c
    android.widget.ListView mFiltersListView -> d
    java.lang.String mPreviousName -> e
    android.view.View mFiltersLayout -> f
    android.view.View mButtonLayout -> g
    net.fred.feedex.adapter.FiltersCursorAdapter mFiltersCursorAdapter -> h
    android.view.ActionMode$Callback mFilterActionModeCallback -> i
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    boolean restoreInstanceState(android.os.Bundle) -> a
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onClickAddFilter(android.view.View) -> onClickAddFilter
    android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.content.Loader) -> onLoaderReset
    void onClickOk(android.view.View) -> onClickOk
    void onClickCancel(android.view.View) -> onClickCancel
    void onClickSearch(android.view.View) -> onClickSearch
    void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    net.fred.feedex.adapter.FiltersCursorAdapter access$1(net.fred.feedex.activity.EditFeedActivity) -> a
    android.widget.ListView access$2(net.fred.feedex.activity.EditFeedActivity) -> b
    android.view.ActionMode$Callback access$3(net.fred.feedex.activity.EditFeedActivity) -> c
    android.widget.EditText access$4(net.fred.feedex.activity.EditFeedActivity) -> d
net.fred.feedex.activity.EditFeedActivity$1 -> net.fred.feedex.activity.a:
    net.fred.feedex.activity.EditFeedActivity this$0 -> a
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    net.fred.feedex.activity.EditFeedActivity access$0(net.fred.feedex.activity.EditFeedActivity$1) -> a
net.fred.feedex.activity.EditFeedActivity$1$1 -> net.fred.feedex.activity.b:
    net.fred.feedex.activity.EditFeedActivity$1 this$1 -> a
    android.widget.EditText val$filterText -> b
    android.widget.CheckBox val$regexCheckBox -> c
    android.widget.RadioButton val$applyTitleRadio -> d
    long val$filterId -> e
    void onClick(android.content.DialogInterface,int) -> onClick
    net.fred.feedex.activity.EditFeedActivity$1 access$0(net.fred.feedex.activity.EditFeedActivity$1$1) -> a
net.fred.feedex.activity.EditFeedActivity$1$1$1 -> net.fred.feedex.activity.c:
    net.fred.feedex.activity.EditFeedActivity$1$1 this$2 -> a
    android.widget.EditText val$filterText -> b
    android.widget.CheckBox val$regexCheckBox -> c
    android.widget.RadioButton val$applyTitleRadio -> d
    long val$filterId -> e
    void run() -> run
net.fred.feedex.activity.EditFeedActivity$1$2 -> net.fred.feedex.activity.d:
    net.fred.feedex.activity.EditFeedActivity$1 this$1 -> a
    long val$filterId -> b
    void onClick(android.content.DialogInterface,int) -> onClick
    net.fred.feedex.activity.EditFeedActivity$1 access$0(net.fred.feedex.activity.EditFeedActivity$1$2) -> a
net.fred.feedex.activity.EditFeedActivity$1$2$1 -> net.fred.feedex.activity.e:
    net.fred.feedex.activity.EditFeedActivity$1$2 this$2 -> a
    long val$filterId -> b
    void run() -> run
net.fred.feedex.activity.EditFeedActivity$2 -> net.fred.feedex.activity.f:
    net.fred.feedex.activity.EditFeedActivity this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
net.fred.feedex.activity.EditFeedActivity$3 -> net.fred.feedex.activity.g:
    net.fred.feedex.activity.EditFeedActivity this$0 -> a
    android.view.View val$dialogView -> b
    void onClick(android.content.DialogInterface,int) -> onClick
net.fred.feedex.activity.EditFeedActivity$4 -> net.fred.feedex.activity.h:
    net.fred.feedex.activity.EditFeedActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
net.fred.feedex.activity.EditFeedActivity$5 -> net.fred.feedex.activity.i:
    net.fred.feedex.activity.EditFeedActivity this$0 -> a
    android.widget.EditText val$searchText -> b
    android.widget.RadioGroup val$radioGroup -> c
    void onClick(android.content.DialogInterface,int) -> onClick
    net.fred.feedex.activity.EditFeedActivity access$0(net.fred.feedex.activity.EditFeedActivity$5) -> a
net.fred.feedex.activity.EditFeedActivity$5$1 -> net.fred.feedex.activity.j:
    net.fred.feedex.activity.EditFeedActivity$5 this$1 -> a
    java.lang.String val$text -> b
    void run() -> run
    net.fred.feedex.activity.EditFeedActivity$5 access$0(net.fred.feedex.activity.EditFeedActivity$5$1) -> a
net.fred.feedex.activity.EditFeedActivity$5$1$1 -> net.fred.feedex.activity.k:
    net.fred.feedex.activity.EditFeedActivity$5$1 this$2 -> a
    java.util.regex.Matcher val$m -> b
    void run() -> run
net.fred.feedex.activity.EditFeedActivity$5$1$2 -> net.fred.feedex.activity.l:
    net.fred.feedex.activity.EditFeedActivity$5$1 this$2 -> a
    void run() -> run
net.fred.feedex.activity.EntriesListActivity -> net.fred.feedex.activity.EntriesListActivity:
    java.lang.String[] FEED_PROJECTION -> n
    byte[] iconBytes -> o
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
net.fred.feedex.activity.EntryActivity -> net.fred.feedex.activity.EntryActivity:
    android.view.animation.TranslateAnimation SLIDE_IN_RIGHT -> a
    android.view.animation.TranslateAnimation SLIDE_IN_LEFT -> b
    android.view.animation.TranslateAnimation SLIDE_OUT_RIGHT -> c
    android.view.animation.TranslateAnimation SLIDE_OUT_LEFT -> d
    int titlePosition -> e
    int datePosition -> f
    int mobilizedHtmlPosition -> g
    int abstractPosition -> h
    int linkPosition -> i
    int feedIdPosition -> j
    int isFavoritePosition -> k
    int isReadPosition -> l
    int enclosurePosition -> m
    int authorPosition -> n
    java.lang.String _id -> o
    java.lang.String _nextId -> p
    java.lang.String _previousId -> q
    android.net.Uri uri -> r
    android.net.Uri parentUri -> s
    int feedId -> t
    boolean favorite -> u
    boolean preferFullText -> v
    boolean canShowIcon -> w
    byte[] iconBytes -> x
    android.webkit.WebView webView -> y
    android.webkit.WebView webView0 -> z
    android.widget.ViewFlipper viewFlipper -> A
    int scrollX -> B
    int scrollY -> C
    java.lang.String link -> D
    java.lang.String enclosure -> E
    android.view.ViewGroup$LayoutParams layoutParams -> F
    android.view.View content -> G
    android.view.View backBtn -> H
    android.view.View forwardBtn -> I
    boolean localPictures -> J
    boolean mIsProgressVisible -> K
    android.database.ContentObserver mEntryObserver -> L
    net.fred.feedex.activity.EntryActivity$JavaScriptObject injectedJSObject -> M
    android.view.animation.TranslateAnimation generateAnimation(float,float) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onResume() -> onResume
    void onPause() -> onPause
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onNewIntent(android.content.Intent) -> onNewIntent
    void reload(boolean) -> a
    java.lang.String generateHtmlContent(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> a
    void setWebviewTransparent(android.webkit.WebView) -> a
    void showEnclosure(android.net.Uri,java.lang.String,int,int) -> a
    void setupNavigationButton(boolean,long) -> a
    void switchEntry(java.lang.String,android.view.animation.Animation,android.view.animation.Animation) -> a
    void nextEntry() -> a
    void previousEntry() -> b
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void scrollUp() -> c
    void scrollDown() -> d
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    void onClickBackBtn(android.view.View) -> onClickBackBtn
    void onClickForwardBtn(android.view.View) -> onClickForwardBtn
    void access$0(net.fred.feedex.activity.EntryActivity,boolean) -> a
    void access$1(net.fred.feedex.activity.EntryActivity,boolean) -> b
    void access$2(net.fred.feedex.activity.EntryActivity,boolean) -> c
    boolean access$3(net.fred.feedex.activity.EntryActivity) -> a
    android.net.Uri access$4(net.fred.feedex.activity.EntryActivity) -> b
    int access$5(net.fred.feedex.activity.EntryActivity) -> c
    android.database.ContentObserver access$6(net.fred.feedex.activity.EntryActivity) -> d
    java.lang.String access$7(net.fred.feedex.activity.EntryActivity) -> e
    void access$8(net.fred.feedex.activity.EntryActivity,android.net.Uri,java.lang.String,int,int) -> a
    void access$9(net.fred.feedex.activity.EntryActivity) -> f
    void access$10(net.fred.feedex.activity.EntryActivity) -> g
    java.lang.String access$11(net.fred.feedex.activity.EntryActivity) -> h
    void access$12(net.fred.feedex.activity.EntryActivity) -> i
    java.lang.String access$13(net.fred.feedex.activity.EntryActivity) -> j
    void access$14(net.fred.feedex.activity.EntryActivity) -> k
    android.webkit.WebView access$15(net.fred.feedex.activity.EntryActivity) -> l
net.fred.feedex.activity.EntryActivity$1 -> net.fred.feedex.activity.m:
    net.fred.feedex.activity.EntryActivity this$0 -> a
    void onChange(boolean) -> onChange
net.fred.feedex.activity.EntryActivity$2 -> net.fred.feedex.activity.n:
    net.fred.feedex.activity.EntryActivity this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
net.fred.feedex.activity.EntryActivity$3 -> net.fred.feedex.activity.o:
    net.fred.feedex.activity.EntryActivity this$0 -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
net.fred.feedex.activity.EntryActivity$4 -> net.fred.feedex.activity.p:
    net.fred.feedex.activity.EntryActivity this$0 -> a
    android.view.GestureDetector val$gestureDetector -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
net.fred.feedex.activity.EntryActivity$5 -> net.fred.feedex.activity.q:
    net.fred.feedex.activity.EntryActivity this$0 -> a
    android.view.GestureDetector val$gestureDetector -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
net.fred.feedex.activity.EntryActivity$6 -> net.fred.feedex.activity.r:
    net.fred.feedex.activity.EntryActivity this$0 -> a
    android.webkit.WebView val$wv -> b
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
net.fred.feedex.activity.EntryActivity$7 -> net.fred.feedex.activity.s:
    net.fred.feedex.activity.EntryActivity this$0 -> a
    void run() -> run
net.fred.feedex.activity.EntryActivity$JavaScriptObject -> net.fred.feedex.activity.t:
    net.fred.feedex.activity.EntryActivity this$0 -> this$0
    java.lang.String toString() -> toString
    void onClickOriginalText() -> onClickOriginalText
    void onClickFullText() -> onClickFullText
    void onClickEnclosure() -> onClickEnclosure
    net.fred.feedex.activity.EntryActivity access$1(net.fred.feedex.activity.EntryActivity$JavaScriptObject) -> access$1
net.fred.feedex.activity.EntryActivity$JavaScriptObject$1 -> net.fred.feedex.activity.u:
    net.fred.feedex.activity.EntryActivity$JavaScriptObject this$1 -> a
    void run() -> run
net.fred.feedex.activity.EntryActivity$JavaScriptObject$2 -> net.fred.feedex.activity.v:
    net.fred.feedex.activity.EntryActivity$JavaScriptObject this$1 -> a
    void run() -> run
    net.fred.feedex.activity.EntryActivity$JavaScriptObject access$0(net.fred.feedex.activity.EntryActivity$JavaScriptObject$2) -> a
net.fred.feedex.activity.EntryActivity$JavaScriptObject$2$1 -> net.fred.feedex.activity.w:
    net.fred.feedex.activity.EntryActivity$JavaScriptObject$2 this$2 -> a
    void run() -> run
net.fred.feedex.activity.EntryActivity$JavaScriptObject$3 -> net.fred.feedex.activity.x:
    net.fred.feedex.activity.EntryActivity$JavaScriptObject this$1 -> a
    void run() -> run
net.fred.feedex.activity.GeneralPrefsActivity -> net.fred.feedex.activity.GeneralPrefsActivity:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
net.fred.feedex.activity.GeneralPrefsActivity$1 -> net.fred.feedex.activity.y:
    net.fred.feedex.activity.GeneralPrefsActivity this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
    net.fred.feedex.activity.GeneralPrefsActivity access$0(net.fred.feedex.activity.GeneralPrefsActivity$1) -> a
net.fred.feedex.activity.GeneralPrefsActivity$1$1 -> net.fred.feedex.activity.z:
    net.fred.feedex.activity.GeneralPrefsActivity$1 this$1 -> a
    void run() -> run
net.fred.feedex.activity.MainActivity -> net.fred.feedex.activity.MainActivity:
    net.fred.feedex.activity.MainActivity$SectionsPagerAdapter mSectionsPagerAdapter -> o
    android.support.v4.view.ViewPager mViewPager -> p
    android.view.ActionMode mActionMode -> q
    android.app.NotificationManager mNotificationManager -> n
    android.content.BroadcastReceiver mRefreshReceiver -> r
    android.content.BroadcastReceiver mRefreshFinishedReceiver -> s
    int loaderId -> t
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabSelected
    void onTabUnselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabUnselected
    void onTabReselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabReselected
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
net.fred.feedex.activity.MainActivity$1 -> net.fred.feedex.activity.aa:
    net.fred.feedex.activity.MainActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.fred.feedex.activity.MainActivity$2 -> net.fred.feedex.activity.ab:
    net.fred.feedex.activity.MainActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.fred.feedex.activity.MainActivity$3 -> net.fred.feedex.activity.ac:
    net.fred.feedex.activity.MainActivity this$0 -> a
    android.app.ActionBar val$actionBar -> b
    void onPageSelected(int) -> a
net.fred.feedex.activity.MainActivity$4 -> net.fred.feedex.activity.ad:
    net.fred.feedex.activity.MainActivity this$0 -> a
    void run() -> run
net.fred.feedex.activity.MainActivity$SectionsPagerAdapter -> net.fred.feedex.activity.ae:
    android.support.v4.app.Fragment getItem(int) -> a
    int getCount() -> b
    java.lang.CharSequence getPageTitle(int) -> c
net.fred.feedex.adapter.CursorLoaderExpandableListAdapter -> net.fred.feedex.a.a:
    android.support.v4.app.FragmentActivity mActivity -> d
    android.support.v4.app.LoaderManager mLoaderMgr -> e
    android.net.Uri mGroupUri -> f
    int mCollapsedGroupLayout -> g
    int mExpandedGroupLayout -> h
    int mChildLayout -> i
    android.view.LayoutInflater mInflater -> j
    android.database.Cursor mGroupCursor -> k
    android.util.SparseArray mChildrenCursors -> a
    android.support.v4.app.LoaderManager$LoaderCallbacks mGroupLoaderCallback -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mChildrenLoaderCallback -> c
    void setAllChildrenCursorsAsObsolete() -> a
    android.view.View newChildView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    android.view.View newGroupView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup) -> a
    android.net.Uri getChildrenUri(android.database.Cursor) -> a
    android.database.Cursor getChild(int,int) -> a
    long getChildId(int,int) -> getChildId
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    int getChildrenCount(int) -> getChildrenCount
    android.database.Cursor getGroup(int) -> a
    int getGroupCount() -> getGroupCount
    long getGroupId(int) -> getGroupId
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    void bindGroupView(android.view.View,android.content.Context,android.database.Cursor,boolean) -> a
    void bindChildView(android.view.View,android.content.Context,android.database.Cursor) -> a
    boolean isChildSelectable(int,int) -> isChildSelectable
    boolean hasStableIds() -> hasStableIds
    void onGroupCollapsed(int) -> onGroupCollapsed
    void notifyDataSetChanged(android.database.Cursor) -> b
    java.lang.Object getChild(int,int) -> getChild
    java.lang.Object getGroup(int) -> getGroup
    android.support.v4.app.FragmentActivity access$2(net.fred.feedex.adapter.CursorLoaderExpandableListAdapter) -> a
    android.net.Uri access$3(net.fred.feedex.adapter.CursorLoaderExpandableListAdapter) -> b
    void access$4(net.fred.feedex.adapter.CursorLoaderExpandableListAdapter,android.database.Cursor) -> a
    void access$5(net.fred.feedex.adapter.CursorLoaderExpandableListAdapter) -> c
net.fred.feedex.adapter.CursorLoaderExpandableListAdapter$1 -> net.fred.feedex.a.b:
    net.fred.feedex.adapter.CursorLoaderExpandableListAdapter this$0 -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
net.fred.feedex.adapter.CursorLoaderExpandableListAdapter$2 -> net.fred.feedex.a.c:
    net.fred.feedex.adapter.CursorLoaderExpandableListAdapter this$0 -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
net.fred.feedex.adapter.EntriesCursorAdapter -> net.fred.feedex.a.d:
    int titleColumnPosition -> a
    int dateColumn -> b
    int isReadColumn -> c
    int favoriteColumn -> d
    int idColumn -> e
    int feedIconColumn -> f
    int feedNameColumn -> g
    int linkColumn -> h
    android.net.Uri uri -> i
    boolean showFeedInfo -> j
    java.util.Vector markedAsRead -> k
    java.util.Vector markedAsUnread -> l
    java.util.Vector favorited -> m
    java.util.Vector unfavorited -> n
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void markAllAsRead() -> a
    void markAsRead(long) -> a
    void markAsUnread(long) -> b
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    void reinit(android.database.Cursor) -> a
    java.util.Vector access$0(net.fred.feedex.adapter.EntriesCursorAdapter) -> a
    java.util.Vector access$1(net.fred.feedex.adapter.EntriesCursorAdapter) -> b
    android.net.Uri access$2(net.fred.feedex.adapter.EntriesCursorAdapter) -> c
    void access$3(net.fred.feedex.adapter.EntriesCursorAdapter,long) -> a
    void access$4(net.fred.feedex.adapter.EntriesCursorAdapter,long) -> b
net.fred.feedex.adapter.EntriesCursorAdapter$1 -> net.fred.feedex.a.e:
    net.fred.feedex.adapter.EntriesCursorAdapter this$0 -> a
    android.widget.ImageView val$imageView -> b
    long val$id -> c
    void onClick(android.view.View) -> onClick
net.fred.feedex.adapter.EntriesCursorAdapter$2 -> net.fred.feedex.a.f:
    net.fred.feedex.adapter.EntriesCursorAdapter this$0 -> a
    long val$id -> b
    android.widget.TextView val$textView -> c
    android.widget.TextView val$dateTextView -> d
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
net.fred.feedex.adapter.EntriesCursorAdapter$3 -> net.fred.feedex.a.g:
    net.fred.feedex.adapter.EntriesCursorAdapter this$0 -> a
    void run() -> run
net.fred.feedex.adapter.EntriesCursorAdapter$4 -> net.fred.feedex.a.h:
    net.fred.feedex.adapter.EntriesCursorAdapter this$0 -> a
    long val$id -> b
    void run() -> run
net.fred.feedex.adapter.EntriesCursorAdapter$5 -> net.fred.feedex.a.i:
    net.fred.feedex.adapter.EntriesCursorAdapter this$0 -> a
    long val$id -> b
    void run() -> run
net.fred.feedex.adapter.FeedsCursorAdapter -> net.fred.feedex.a.j:
    java.lang.String COLON -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    int isGroupPosition -> f
    int isGroupCollapsedPosition -> g
    int namePosition -> h
    int lastUpdateColumn -> i
    int idPosition -> j
    int linkPosition -> k
    int errorPosition -> l
    int iconPosition -> m
    boolean feedSort -> n
    net.fred.feedex.view.DragNDropExpandableListView mListView -> o
    android.util.SparseBooleanArray mGroupInitDone -> p
    java.util.Vector sortViews -> q
    long mSelectedFeedId -> r
    void setExpandableListView(net.fred.feedex.view.DragNDropExpandableListView) -> a
    void bindChildView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void bindGroupView(android.view.View,android.content.Context,android.database.Cursor,boolean) -> a
    android.net.Uri getChildrenUri(android.database.Cursor) -> a
    void startFeedActivity(long) -> a
    void setFeedSortEnabled(boolean) -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetChanged(android.database.Cursor) -> b
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    void reinit(android.database.Cursor) -> c
    void setSelectedFeed(long) -> b
    int access$0(net.fred.feedex.adapter.FeedsCursorAdapter) -> a
    net.fred.feedex.view.DragNDropExpandableListView access$1(net.fred.feedex.adapter.FeedsCursorAdapter) -> b
    android.support.v4.app.FragmentActivity access$2(net.fred.feedex.adapter.FeedsCursorAdapter) -> c
net.fred.feedex.adapter.FeedsCursorAdapter$1 -> net.fred.feedex.a.k:
    net.fred.feedex.adapter.FeedsCursorAdapter this$0 -> a
    boolean onGroupClick(android.widget.ExpandableListView,android.view.View,int,long) -> onGroupClick
net.fred.feedex.adapter.FeedsCursorAdapter$2 -> net.fred.feedex.a.l:
    net.fred.feedex.adapter.FeedsCursorAdapter this$0 -> a
    int val$groupPosition -> b
    void run() -> run
net.fred.feedex.adapter.FiltersCursorAdapter -> net.fred.feedex.a.m:
    int filterTextColumnPosition -> a
    int isAppliedToTitleColumnPosition -> b
    int mSelectedFilter -> c
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    void reinit(android.database.Cursor) -> a
    void setSelectedFilter(int) -> a
    int getSelectedFilter() -> a
net.fred.feedex.fragment.EntriesListFragment -> net.fred.feedex.b.a:
    android.net.Uri mUri -> X
    boolean mShowFeedInfo -> Y
    net.fred.feedex.adapter.EntriesCursorAdapter mEntriesCursorAdapter -> Z
    int loaderId -> aa
    void onCreate(android.os.Bundle) -> d
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
net.fred.feedex.fragment.EntriesListFragment$1 -> net.fred.feedex.b.b:
    net.fred.feedex.fragment.EntriesListFragment this$0 -> a
    void run() -> run
net.fred.feedex.fragment.FeedsListFragment -> net.fred.feedex.b.c:
    net.fred.feedex.adapter.FeedsCursorAdapter mListAdapter -> X
    net.fred.feedex.view.DragNDropExpandableListView mListView -> Y
    android.view.ActionMode$Callback mFeedActionModeCallback -> Z
    android.view.ActionMode$Callback mGroupActionModeCallback -> aa
    void onCreate(android.os.Bundle) -> d
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void moveItem(boolean,boolean,boolean,long,int,int) -> a
    void onDestroy() -> o
    void setFeedSortEnabled(boolean) -> d
    void onPrepareOptionsMenu(android.view.Menu) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    net.fred.feedex.adapter.FeedsCursorAdapter access$0(net.fred.feedex.fragment.FeedsListFragment) -> a
    net.fred.feedex.view.DragNDropExpandableListView access$1(net.fred.feedex.fragment.FeedsListFragment) -> b
    android.view.ActionMode$Callback access$2(net.fred.feedex.fragment.FeedsListFragment) -> c
    android.view.ActionMode$Callback access$3(net.fred.feedex.fragment.FeedsListFragment) -> d
    void access$4(net.fred.feedex.fragment.FeedsListFragment,boolean,boolean,boolean,long,int,int) -> a
net.fred.feedex.fragment.FeedsListFragment$1 -> net.fred.feedex.b.d:
    net.fred.feedex.fragment.FeedsListFragment this$0 -> a
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    net.fred.feedex.fragment.FeedsListFragment access$0(net.fred.feedex.fragment.FeedsListFragment$1) -> a
net.fred.feedex.fragment.FeedsListFragment$1$1 -> net.fred.feedex.b.e:
    net.fred.feedex.fragment.FeedsListFragment$1 this$1 -> a
    android.content.Intent val$intent -> b
    void run() -> run
net.fred.feedex.fragment.FeedsListFragment$1$2 -> net.fred.feedex.b.f:
    net.fred.feedex.fragment.FeedsListFragment$1 this$1 -> a
    long val$feedId -> b
    void run() -> run
net.fred.feedex.fragment.FeedsListFragment$1$3 -> net.fred.feedex.b.g:
    net.fred.feedex.fragment.FeedsListFragment$1 this$1 -> a
    long val$feedId -> b
    void onClick(android.content.DialogInterface,int) -> onClick
    net.fred.feedex.fragment.FeedsListFragment$1 access$0(net.fred.feedex.fragment.FeedsListFragment$1$3) -> a
net.fred.feedex.fragment.FeedsListFragment$1$3$1 -> net.fred.feedex.b.h:
    net.fred.feedex.fragment.FeedsListFragment$1$3 this$2 -> a
    long val$feedId -> b
    void run() -> run
net.fred.feedex.fragment.FeedsListFragment$10 -> net.fred.feedex.b.i:
    net.fred.feedex.fragment.FeedsListFragment this$0 -> a
    java.lang.String[] val$fileNames -> b
    void onClick(android.content.DialogInterface,int) -> onClick
net.fred.feedex.fragment.FeedsListFragment$2 -> net.fred.feedex.b.j:
    net.fred.feedex.fragment.FeedsListFragment this$0 -> a
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    net.fred.feedex.fragment.FeedsListFragment access$0(net.fred.feedex.fragment.FeedsListFragment$2) -> a
net.fred.feedex.fragment.FeedsListFragment$2$1 -> net.fred.feedex.b.k:
    net.fred.feedex.fragment.FeedsListFragment$2 this$1 -> a
    android.widget.EditText val$input -> b
    long val$groupId -> c
    void onClick(android.content.DialogInterface,int) -> onClick
    net.fred.feedex.fragment.FeedsListFragment$2 access$0(net.fred.feedex.fragment.FeedsListFragment$2$1) -> a
net.fred.feedex.fragment.FeedsListFragment$2$1$1 -> net.fred.feedex.b.l:
    net.fred.feedex.fragment.FeedsListFragment$2$1 this$2 -> a
    android.widget.EditText val$input -> b
    long val$groupId -> c
    void run() -> run
net.fred.feedex.fragment.FeedsListFragment$2$2 -> net.fred.feedex.b.m:
    net.fred.feedex.fragment.FeedsListFragment$2 this$1 -> a
    long val$groupId -> b
    void onClick(android.content.DialogInterface,int) -> onClick
    net.fred.feedex.fragment.FeedsListFragment$2 access$0(net.fred.feedex.fragment.FeedsListFragment$2$2) -> a
net.fred.feedex.fragment.FeedsListFragment$2$2$1 -> net.fred.feedex.b.n:
    net.fred.feedex.fragment.FeedsListFragment$2$2 this$2 -> a
    long val$groupId -> b
    void run() -> run
net.fred.feedex.fragment.FeedsListFragment$3 -> net.fred.feedex.b.o:
    net.fred.feedex.fragment.FeedsListFragment this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
net.fred.feedex.fragment.FeedsListFragment$4 -> net.fred.feedex.b.p:
    net.fred.feedex.fragment.FeedsListFragment this$0 -> a
    boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
net.fred.feedex.fragment.FeedsListFragment$5 -> net.fred.feedex.b.q:
    net.fred.feedex.fragment.FeedsListFragment this$0 -> a
    void onStopDrag(android.view.View) -> a
    void onStartDrag(android.view.View) -> b
    void onDrop(int,int) -> a
    void onDrag(int,int,android.widget.ListView) -> a
    net.fred.feedex.fragment.FeedsListFragment access$0(net.fred.feedex.fragment.FeedsListFragment$5) -> a
net.fred.feedex.fragment.FeedsListFragment$5$1 -> net.fred.feedex.b.r:
    net.fred.feedex.fragment.FeedsListFragment$5 this$1 -> a
    int val$flatPosTo -> b
    int val$flatPosFrom -> c
    void onClick(android.content.DialogInterface,int) -> onClick
net.fred.feedex.fragment.FeedsListFragment$5$2 -> net.fred.feedex.b.s:
    net.fred.feedex.fragment.FeedsListFragment$5 this$1 -> a
    boolean val$fromIsGroup -> b
    boolean val$toIsGroup -> c
    boolean val$fromIsFeedWithoutGroup -> d
    long val$packedPosTo -> e
    int val$packedGroupPosTo -> f
    int val$flatPosFrom -> g
    void onClick(android.content.DialogInterface,int) -> onClick
net.fred.feedex.fragment.FeedsListFragment$6 -> net.fred.feedex.b.t:
    net.fred.feedex.fragment.FeedsListFragment this$0 -> a
    void run() -> run
net.fred.feedex.fragment.FeedsListFragment$7 -> net.fred.feedex.b.u:
    net.fred.feedex.fragment.FeedsListFragment this$0 -> a
    void run() -> run
net.fred.feedex.fragment.FeedsListFragment$8 -> net.fred.feedex.b.v:
    net.fred.feedex.fragment.FeedsListFragment this$0 -> a
    android.widget.EditText val$input -> b
    void onClick(android.content.DialogInterface,int) -> onClick
    net.fred.feedex.fragment.FeedsListFragment access$0(net.fred.feedex.fragment.FeedsListFragment$8) -> a
net.fred.feedex.fragment.FeedsListFragment$8$1 -> net.fred.feedex.b.w:
    net.fred.feedex.fragment.FeedsListFragment$8 this$1 -> a
    android.widget.EditText val$input -> b
    void run() -> run
net.fred.feedex.fragment.FeedsListFragment$9 -> net.fred.feedex.b.x:
    net.fred.feedex.fragment.FeedsListFragment this$0 -> a
    boolean accept(java.io.File,java.lang.String) -> accept
net.fred.feedex.handler.PictureFilenameFilter -> net.fred.feedex.c.a:
    java.util.regex.Pattern pattern -> a
    void setEntryId(java.lang.String) -> a
    boolean accept(java.io.File,java.lang.String) -> accept
net.fred.feedex.handler.RssAtomHandler -> net.fred.feedex.c.b:
    java.lang.String[] TIMEZONES -> a
    java.lang.String[] TIMEZONES_REPLACE -> b
    long KEEP_TIME -> c
    java.text.DateFormat[] PUBDATE_DATEFORMATS -> d
    java.text.DateFormat[] UPDATE_DATEFORMATS -> e
    java.util.regex.Pattern IMG_PATTERN -> f
    java.util.Date lastUpdateDate -> g
    java.lang.String id -> h
    boolean entryTagEntered -> i
    boolean titleTagEntered -> j
    boolean updatedTagEntered -> k
    boolean linkTagEntered -> l
    boolean descriptionTagEntered -> m
    boolean pubDateTagEntered -> n
    boolean dateTagEntered -> o
    boolean lastUpdateDateTagEntered -> p
    boolean guidTagEntered -> q
    boolean authorTagEntered -> r
    java.lang.StringBuilder title -> s
    java.lang.StringBuilder dateStringBuilder -> t
    java.lang.String feedLink -> u
    java.util.Date entryDate -> v
    java.lang.StringBuilder entryLink -> w
    java.lang.StringBuilder description -> x
    java.lang.StringBuilder enclosure -> y
    android.net.Uri feedEntiresUri -> z
    int newCount -> A
    java.lang.String feedName -> B
    java.lang.String feedTitle -> C
    java.lang.String feedBaseUrl -> D
    boolean done -> E
    java.util.Date keepDateBorder -> F
    boolean fetchImages -> G
    boolean cancelled -> H
    long now -> I
    java.lang.StringBuilder guid -> J
    java.lang.StringBuilder author -> K
    java.lang.StringBuilder tmpAuthor -> L
    void init(java.util.Date,java.lang.String,java.lang.String,java.lang.String) -> a
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void startEnclosure(org.xml.sax.Attributes,java.lang.String) -> a
    void characters(char[],int,int) -> characters
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    java.lang.String getFeedLink() -> a
    int getNewCount() -> b
    boolean isDone() -> c
    boolean isCancelled() -> d
    void cancel() -> e
    void setFetchImages(boolean) -> a
    java.util.Date parseUpdateDate(java.lang.String) -> a
    java.util.Date parsePubdateDate(java.lang.String) -> b
    boolean isEntryFiltered(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String unescapeTitle(java.lang.String) -> c
    android.util.Pair improveFeedDescription(java.lang.String,boolean) -> a
    void downloadImages(java.lang.String,java.util.Vector) -> a
    void endDocument() -> endDocument
net.fred.feedex.provider.FeedData -> net.fred.feedex.provider.a:
    void deletePicturesOfFeed(android.content.Context,android.net.Uri,java.lang.String) -> a
    android.content.ContentValues getReadContentValues() -> a
    android.content.ContentValues getUnreadContentValues() -> b
net.fred.feedex.provider.FeedData$EntryColumns -> net.fred.feedex.provider.b:
    java.lang.String[] COLUMNS -> a
    java.lang.String[] TYPES -> b
    android.net.Uri CONTENT_URI -> c
    android.net.Uri FAVORITES_CONTENT_URI -> d
    java.lang.String[] PROJECTION_ID -> e
    java.lang.String WHERE_UNREAD -> f
    java.lang.String WHERE_NOT_FAVORITE -> g
    android.net.Uri ENTRIES_FOR_FEED_CONTENT_URI(java.lang.String) -> a
    android.net.Uri ENTRIES_FOR_FEED_CONTENT_URI(long) -> a
    android.net.Uri CONTENT_URI(java.lang.String) -> b
    android.net.Uri CONTENT_URI(long) -> b
    android.net.Uri PARENT_URI(java.lang.String) -> c
net.fred.feedex.provider.FeedData$FeedColumns -> net.fred.feedex.provider.c:
    android.net.Uri CONTENT_URI -> a
    java.lang.String[] COLUMNS -> b
    java.lang.String[] TYPES -> c
    android.net.Uri GROUPS_CONTENT_URI -> d
    java.lang.String[] PROJECTION_ID -> e
    java.lang.String[] PROJECTION_GROUP_ID -> f
    java.lang.String[] PROJECTION_PRIORITY -> g
    android.net.Uri CONTENT_URI(java.lang.String) -> a
    android.net.Uri CONTENT_URI(long) -> a
    android.net.Uri GROUPS_CONTENT_URI(long) -> b
    android.net.Uri FEEDS_FOR_GROUPS_CONTENT_URI(java.lang.String) -> b
    android.net.Uri FEEDS_FOR_GROUPS_CONTENT_URI(long) -> c
net.fred.feedex.provider.FeedData$FilterColumns -> net.fred.feedex.provider.d:
    android.net.Uri CONTENT_URI -> a
    java.lang.String[] COLUMNS -> b
    java.lang.String[] TYPES -> c
    android.net.Uri FILTERS_FOR_FEED_CONTENT_URI(java.lang.String) -> a
net.fred.feedex.provider.FeedDataContentProvider -> net.fred.feedex.provider.FeedDataContentProvider:
    java.lang.String FOLDER -> c
    java.lang.String IMAGE_FOLDER -> a
    java.io.File IMAGE_FOLDER_FILE -> b
    java.lang.String BACKUP_OPML -> d
    android.content.UriMatcher URI_MATCHER -> e
    net.fred.feedex.provider.FeedDataContentProvider$DatabaseHelper mDatabaseHelper -> f
    java.lang.String[] MAXPRIORITY -> g
    java.lang.String getType(android.net.Uri) -> getType
    boolean onCreate() -> onCreate
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    java.lang.String getFeedIdFromEntryId(long) -> a
    void notifyGroupFromFeedId(long) -> b
    void notifyGroupFromFeedId(java.lang.String) -> a
    java.lang.String access$0() -> a
net.fred.feedex.provider.FeedDataContentProvider$1 -> net.fred.feedex.provider.e:
    net.fred.feedex.provider.FeedDataContentProvider this$0 -> a
    java.lang.String val$feedId -> b
    void run() -> run
net.fred.feedex.provider.FeedDataContentProvider$DatabaseHelper -> net.fred.feedex.provider.f:
    android.os.Handler mHandler -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    java.lang.String createTable(java.lang.String,java.lang.String[],java.lang.String[]) -> a
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
net.fred.feedex.provider.FeedDataContentProvider$DatabaseHelper$1 -> net.fred.feedex.provider.g:
    net.fred.feedex.provider.FeedDataContentProvider$DatabaseHelper this$1 -> a
    void run() -> run
net.fred.feedex.provider.OPML -> net.fred.feedex.provider.h:
    java.lang.String[] FEEDS_PROJECTION -> a
    java.lang.String[] FILTERS_PROJECTION -> b
    net.fred.feedex.provider.OPML$OPMLParser parser -> c
    void importFromFile(java.lang.String) -> a
    void exportToFile(java.lang.String) -> b
net.fred.feedex.provider.OPML$OPMLParser -> net.fred.feedex.provider.i:
    boolean bodyTagEntered -> a
    boolean feedEntered -> b
    boolean probablyValidElement -> c
    java.lang.String groupId -> d
    java.lang.String feedId -> e
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void endDocument() -> endDocument
net.fred.feedex.receiver.BootCompletedBroadcastReceiver -> net.fred.feedex.receiver.BootCompletedBroadcastReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.fred.feedex.receiver.ConnectionChangeReceiver -> net.fred.feedex.receiver.ConnectionChangeReceiver:
    boolean mConnection -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.fred.feedex.receiver.MobilizeFeedBroadcastReceiver -> net.fred.feedex.receiver.MobilizeFeedBroadcastReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.fred.feedex.receiver.RefreshBroadcastReceiver -> net.fred.feedex.receiver.RefreshBroadcastReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.fred.feedex.service.FetcherService -> net.fred.feedex.service.FetcherService:
    android.app.NotificationManager notificationManager -> a
    java.net.Proxy proxy -> b
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void mobilizeFeed(android.net.Uri,android.net.NetworkInfo) -> a
    int refreshFeeds(java.lang.String,android.net.NetworkInfo) -> a
    java.net.HttpURLConnection setupConnection(java.lang.String) -> a
    java.net.HttpURLConnection setupConnection(java.net.URL) -> a
    java.net.HttpURLConnection setupConnection(java.net.URL,int) -> a
    byte[] getBytes(java.io.InputStream) -> a
    void retrieveFavicon(android.content.Context,java.net.URL,java.lang.String) -> a
    java.io.InputStream getConnectionInputStream(java.net.HttpURLConnection) -> a
    boolean isCurrentlyFetching() -> a
net.fred.feedex.service.RefreshService -> net.fred.feedex.service.RefreshService:
    android.content.SharedPreferences$OnSharedPreferenceChangeListener listener -> a
    android.content.Intent refreshBroadcastIntent -> b
    android.app.AlarmManager alarmManager -> c
    android.app.PendingIntent timerIntent -> d
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onRebind(android.content.Intent) -> onRebind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onCreate() -> onCreate
    void restartTimer(boolean) -> a
    void onDestroy() -> onDestroy
    void access$0(net.fred.feedex.service.RefreshService,boolean) -> a
net.fred.feedex.service.RefreshService$1 -> net.fred.feedex.service.a:
    net.fred.feedex.service.RefreshService this$0 -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
net.fred.feedex.view.DragNDropExpandableListView -> net.fred.feedex.view.DragNDropExpandableListView:
    boolean mDragNDropEnabled -> a
    boolean mDragMode -> b
    int mStartPosition -> c
    int mEndPosition -> d
    int mDragPointOffset -> e
    android.widget.ImageView mDragView -> f
    net.fred.feedex.view.DragNDropListener mDragNDropListener -> g
    void setDragNDropListener(net.fred.feedex.view.DragNDropListener) -> setDragNDropListener
    void setDragNDropEnabled(boolean) -> setDragNDropEnabled
    boolean isDragNDropEnabled() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void drag(int,int) -> a
    void startDrag(int,int) -> b
    void stopDrag(int) -> a
    long getItemIdAtPosition(int) -> getItemIdAtPosition
net.fred.feedex.view.DragNDropListener -> net.fred.feedex.view.a:
    void onStartDrag(android.view.View) -> b
    void onDrag(int,int,android.widget.ListView) -> a
    void onStopDrag(android.view.View) -> a
    void onDrop(int,int) -> a
net.fred.feedex.widget.ColorPickerDialogPreference -> net.fred.feedex.widget.ColorPickerDialogPreference:
    android.widget.SeekBar redSeekBar -> b
    android.widget.SeekBar greenSeekBar -> c
    android.widget.SeekBar blueSeekBar -> d
    android.widget.SeekBar transparencySeekBar -> e
    int color -> a
    android.view.View onCreateDialogView() -> onCreateDialogView
    void onDialogClosed(boolean) -> onDialogClosed
    android.widget.SeekBar access$0(net.fred.feedex.widget.ColorPickerDialogPreference) -> a
    android.widget.SeekBar access$1(net.fred.feedex.widget.ColorPickerDialogPreference) -> b
    android.widget.SeekBar access$2(net.fred.feedex.widget.ColorPickerDialogPreference) -> c
    android.widget.SeekBar access$3(net.fred.feedex.widget.ColorPickerDialogPreference) -> d
net.fred.feedex.widget.ColorPickerDialogPreference$1 -> net.fred.feedex.widget.a:
    net.fred.feedex.widget.ColorPickerDialogPreference this$0 -> a
    android.view.View val$view -> b
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
net.fred.feedex.widget.WidgetConfigActivity -> net.fred.feedex.widget.WidgetConfigActivity:
    int widgetId -> a
    java.lang.String NAMECOLUMN -> b
    void onCreate(android.os.Bundle) -> onCreate
    int access$0(net.fred.feedex.widget.WidgetConfigActivity) -> a
net.fred.feedex.widget.WidgetConfigActivity$1 -> net.fred.feedex.widget.b:
    net.fred.feedex.widget.WidgetConfigActivity this$0 -> a
    android.preference.PreferenceCategory val$feedsPreferenceCategory -> b
    void onClick(android.view.View) -> onClick
net.fred.feedex.widget.WidgetFeedsFactory -> net.fred.feedex.widget.c:
    android.content.Context context -> a
    int appWidgetId -> b
    android.database.Cursor cursor -> c
    net.fred.feedex.ThrottledContentObserver mContentObserver -> d
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    int getCount() -> getCount
    android.widget.RemoteViews getViewAt(int) -> getViewAt
    android.widget.RemoteViews getLoadingView() -> getLoadingView
    int getViewTypeCount() -> getViewTypeCount
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    void onDataSetChanged() -> onDataSetChanged
    void computeCursor() -> a
    android.content.Context access$0(net.fred.feedex.widget.WidgetFeedsFactory) -> a
    int access$1(net.fred.feedex.widget.WidgetFeedsFactory) -> b
net.fred.feedex.widget.WidgetFeedsFactory$1 -> net.fred.feedex.widget.d:
    net.fred.feedex.widget.WidgetFeedsFactory this$0 -> a
    void onChangeThrottled(boolean) -> a
net.fred.feedex.widget.WidgetProvider -> net.fred.feedex.widget.WidgetProvider:
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
net.fred.feedex.widget.WidgetService -> net.fred.feedex.widget.WidgetService:
    android.widget.RemoteViewsService$RemoteViewsFactory onGetViewFactory(android.content.Intent) -> onGetViewFactory
